name: Build and Deploy Application

on:
  workflow_dispatch:
    inputs:
      operation:
        description: 'Operation to perform'
        required: true
        default: 'build'
        type: choice
        options:
          - deploy

  push:
    branches: [main]
    paths:
      - 'app/**'
  pull_request:
    branches: [main]
    paths:
      - 'app/**'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::251374076386:role/GriffinFamily.Link.TF"
          aws-region: us-east-1
          audience: sts.amazonaws.com

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Fix Chart.yaml case sensitivity
        run: |
           mv helm/webapp/chart.yaml helm/webapp/Chart.yaml || echo "File already has correct name"

      - name: Build, tag, and push image to Amazon ECR
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.operation == 'deploy' || github.event_name == 'push' || github.event_name == 'pull_request'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: thegriffinfamily-link-resume-repo  
          IMAGE_TAG: ${{ github.sha }} #The Git commit SHA used as the image tag.

        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./app
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "IMAGE=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Update Helm chart values
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.operation == 'deploy' || github.event_name == 'push' || github.event_name == 'pull_request'
        # Updates the image value in the Helm chart's values.yaml file with the new Docker image tag.
        run: |
          sed -i "s|image:.*|image: ${{ env.IMAGE }}|g" helm/webapp/values.yaml

      - name: Configure kubectl
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.operation == 'deploy' || github.event_name == 'push' || github.event_name == 'pull_request'
        run: |
          aws eks update-kubeconfig --name thegriffinfamily-link-resume-prod --region us-east-1
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      - name: Terraform Init
        run: terraform init
        working-directory: ./infrastructure
      
      - name: Get Terraform Outputs
        id: terraform-output
        run: |
          CERT_ARN=$(terraform output -raw acm_certificate_arn)
          echo "CERT_ARN=$CERT_ARN" >> $GITHUB_ENV
            
      - name: Deploy to Kubernetes
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.operation == 'deploy' || github.event_name == 'push' || github.event_name == 'pull_request'
        run: |
            helm upgrade --install webapp ./helm/webapp --namespace default \
              --set ingress.annotations."alb\.ingress\.kubernetes\.io/certificate-arn"=${{ env.CERT_ARN }} \
              --set ingress.annotations."alb\.ingress\.kubernetes\.io/listen-ports"='[{"HTTP":80},{"HTTPS":443}]' \
              --set ingress.annotations."alb\.ingress\.kubernetes\.io/ssl-redirect"='443'
      
      # Commits the changes to the Helm chart's values.yaml file and pushes the changes to the repository.
      - name: Commit and push changes
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.operation == 'deploy' || github.event_name == 'push' || github.event_name == 'pull_request'
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add helm/webapp/values.yaml 
          git commit -m "Update image tag to ${{ github.sha }}" || echo "No changes to commit"
          git push