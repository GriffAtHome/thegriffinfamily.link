apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ include "webapp.fullname" . }}
  labels:
    {{- include "webapp.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: {{ include "webapp.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "webapp.name" . }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image | quote }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - name: http
              containerPort: 8000
          command:
            - "gunicorn"
            - "--workers"
            - "$(GUNICORN_WORKERS)"
            - "--bind"
            - "0.0.0.0:8000"
            - "app:app"
          env:
            - name: GUNICORN_WORKERS
              value: "{{ .Values.gunicornWorkers | default "2" }}"
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
  strategy:
    canary:
      stableService: {{ include "webapp.fullname" . }}-stable
      canaryService: {{ include "webapp.fullname" . }}-canary
      analysis:
        templates:
          - templateName: success-rate
        args:
          - name: service-name
            value: {{ include "webapp.fullname" . }}
      steps:
        - setWeight: 20
        - pause: {duration: 30s}
        - setWeight: 40
        - pause: {duration: 30s}
        - setWeight: 60
        - pause: {duration: 30s}
        - setWeight: 80
        - pause: {duration: 30s}
      trafficRouting:
        alb:
          ingress: {{ include "webapp.fullname" . }}
          servicePort: 80
          rootService: {{ include "webapp.fullname" . }}-stable