{{- if .Values.ingress.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "webapp.fullname" . }}
  labels:
    {{- include "webapp.labels" . | nindent 4 }}
  annotations:
    # Health check configuration - revert to what was working
    alb.ingress.kubernetes.io/healthcheck-path: "/health/liveness"
    alb.ingress.kubernetes.io/healthcheck-port: "traffic-port"
    alb.ingress.kubernetes.io/healthcheck-protocol: "HTTP"
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "15" 
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    alb.ingress.kubernetes.io/success-codes: "200-399"
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "2"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.certificateARN | default "" }}
    # This specific format is required for ALB to work with Argo Rollouts
    alb.ingress.kubernetes.io/actions.traffic-split: |
      {
        "type": "forward",
        "forwardConfig": {
          "targetGroups": [
            {
              "serviceName": "webapp",
              "servicePort": "80",
              "weight": 100
            }
          ]
        }
      }
    alb.ingress.kubernetes.io/tags: service=webapp,environment={{ .Values.environment | default "dev" }}
    kubernetes.io/ingress.class: alb
    # Force reconcile with a new value
    alb.ingress.kubernetes.io/force-reconcile: "{{ now | unixEpoch }}"
    # Add explicit host conditions for traffic-split
    alb.ingress.kubernetes.io/conditions.traffic-split: |
      [{"field":"host-header","hostHeaderConfig":{"values":["www.{{ .Values.domain | default "thegriffinfamily.link" }}"]}}]
spec:
  ingressClassName: alb
  rules:
    - host: www.{{ .Values.domain | default "thegriffinfamily.link" }}
      http:
        paths:
          # Root path should go to our app
          - path: /
            pathType: Prefix
            backend:
              service:
                name: traffic-split
                port:
                  number: 80
          # Add an explicit path for the resumes endpoint
          - path: /resumes
            pathType: Prefix
            backend:
              service:
                name: webapp
                port:
                  number: 80
          # Health check path - just keep one health path, not multiple
          - path: /health
            pathType: Prefix
            backend:
              service:
                name: webapp
                port:
                  number: 80
  tls:
    - hosts:
        - www.{{ .Values.domain | default "thegriffinfamily.link" }}
      secretName: tls-secret
{{- end }}